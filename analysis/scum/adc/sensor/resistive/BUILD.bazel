load("@pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "adc_data",
    srcs = ["adc_data.py"],
    deps = [
        "//utils/regression:exponential_regression",
        "//utils/regression:linear_regression",
        "//utils/regression:polynomial_regression",
        requirement("numpy"),
        requirement("scipy"),
    ],
)

py_binary(
    name = "adc_transient_analysis_main",
    srcs = ["adc_transient_analysis_main.py"],
    deps = [
        ":adc_data",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
    ],
)

py_binary(
    name = "adc_transient_multiple_cleanup_main",
    srcs = ["adc_transient_multiple_cleanup_main.py"],
    deps = [
        requirement("absl-py"),
        requirement("pandas"),
    ],
)

py_binary(
    name = "adc_transient_simulation_main",
    srcs = ["adc_transient_simulation_main.py"],
    deps = [
        ":adc_data",
        "//utils/regression:linear_regression",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("SciencePlots"),
    ],
)

py_binary(
    name = "adc_transient_main",
    srcs = ["adc_transient_main.py"],
    data = ["//analysis/scum/adc/sensor/resistive/data:adc_resistive_data"],
    deps = [
        ":adc_data",
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("pandas"),
        requirement("SciencePlots"),
    ],
)

py_binary(
    name = "adc_transient_cap_dac_main",
    srcs = ["adc_transient_cap_dac_main.py"],
    data = ["//analysis/scum/adc/sensor/resistive/data:adc_resistive_cap_dac_data"],
    deps = [
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("pandas"),
        requirement("scipy"),
    ],
)

py_binary(
    name = "time_constants_main",
    srcs = ["time_constants_main.py"],
    data = ["//analysis/scum/adc/sensor/resistive/data:time_constants_data"],
    deps = [
        requirement("absl-py"),
        requirement("matplotlib"),
        requirement("numpy"),
        requirement("pandas"),
    ],
)
